function main=main()
% command line: 
%      'KaDE' 'sym_iso.ka' '-syntax' '4' '-d' 'output' '--with-symmetries' 'true''--octave-output' 'sym1_emb.m' '--count''embeddings'
%% THINGS THAT ARE KNOWN FROM KAPPA FILE AND KaSim OPTIONS:
%% 
%% init - the initial abundances of each species and token
%% tinit - the initial simulation time (likely 0)
%% tend - the final simulation time 
%% initialstep - initial time step at the beginning of numerical integration
%% maxstep - maximal time step for numerical integration
%% reltol - relative error tolerance;
%% abstol - absolute error tolerance;
%% period - the time period between points to return
%%
%% variables (init(i),y(i)) denote numbers of embeddings 
%% rule rates are corrected by the number of automorphisms in the lhs of rules


tinit=0;
tend=1;
initialstep=1e-05;
maxstep=0.02;
reltol=0.001;
abstol=0.001;
period=0.01;
nonnegative=false;

global nodevar
nodevar=10;
global max_stoc_coef
max_stoc_coef=0;
nvar=2;
nobs=1;
nrules=3;

global var
var=zeros(nvar,1);
global init
init=sparse(nodevar,1);
stoc=zeros(nrules,max_stoc_coef);
global k
global kd
global kun
global kdun
global stoc

k=zeros(nrules,1);
kd=zeros(nrules,1);
kun=zeros(nrules,1);
kdun=zeros(nrules,1);
global jacvar
jacvar=sparse(nvar,nodevar);
global jack
global jackd
global jackun
global jackund
global jacstoc

jack=zeros(nrules,nodevar);
jackd=zeros(nrules,nodevar);
jackun=zeros(nrules,nodevar);
jackund=zeros(nrules,nodevar);

t = 0.000000;

init(10)=t;
init(1)=20; % A(x{u}[.],y{p}[.],z[1]), A(x{u}[.],y{p}[.],z[1])
init(2)=10; % A(x{u}[.],y{u}[.],z[.])

k(1)=1; % A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
k(2)=1; % A(x{u}[.]) -> A(x{p}[.])
k(3)=1; % A(y{u}[.]) -> A(y{p}[.])

uiIsOctave = false;
uiIsMatlab = false;
LIC = license('inuse');
for elem = 1:numel(LIC)
    envStr = LIC(elem).feature
    if strcmpi(envStr,'octave')
       LICname=envStr;
       uiIsOctave = true;
       break
    end
    if strcmpi(envStr,'matlab')
       LICname=envStr
       uiIsMatlab = true;
       break
    end
end


if nonnegative 
   options = odeset('RelTol', reltol, ...
                    'AbsTol', abstol, ...
                    'InitialStep', initialstep, ...
                    'MaxStep', maxstep, ...
                    'Jacobian', @ode_jacobian, ...
                   'NonNegative', [1:1:9]);
else
   options = odeset('RelTol', reltol, ...
                    'AbsTol', abstol, ...
                    'InitialStep', initialstep, ...
                    'MaxStep', maxstep, ...
                    'Jacobian', @ode_jacobian);
end


if nonnegative
   if uiIsMatlab
      soln =  ode15s(@ode_aux,[tinit tend],ode_init(),options);
      soln.y=soln.y';
      vt = soln.x;
      vy = soln.y;
   elseif uiIsOctave
      [vt,vy] = ode23s(@ode_aux,[tinit tend],ode_init(),options);
   end
else
   if uiIsMatlab
      soln =  ode15s(@ode_aux,[tinit tend],ode_init(),options);
      soln.y=soln.y';
      vt = soln.x;
      vy = soln.y;
   elseif uiIsOctave
      soln = ode2r(@ode_aux,[tinit tend],ode_init(),options);
      vt = soln.x;
      vy = soln.y;
   end
end;


nrows = length(vt);

tmp = zeros(nodevar,1);

n_points = floor ((tend-tinit)/period)+1;
t = linspace(tinit, tend, n_points);
obs = zeros(nrows,nobs);

for j=1:nrows
    for i=1:nodevar
        z(i)=vy(j,i);
    end
    h=ode_obs(z);
    for i=1:nobs
        obs(j,i)=h(i);
    end
end
if nobs==1
   y = interp1(vt, obs, t, 'pchip')';
else
   y = interp1(vt, obs, t, 'pchip');
end


filename = 'data.csv';
fid = fopen (filename,'w');
fprintf(fid,'# KaDE sym_iso.ka -syntax 4 -d output --with-symmetries true --octave-output sym1_emb.m --count embeddings\n')
fprintf(fid,'# ')
fprintf(fid,'[T],')
fprintf(fid,'\n')
for j=1:n_points
    for i=1:nobs
        fprintf(fid,'%f,',y(j,i));
    end
    fprintf(fid,'\n');
end
fclose(fid);


end



function Init=ode_init()

global nodevar
global init
Init=zeros(nodevar,1);

Init(1) = init(1); % A(x{u}[.],y{p}[.],z[1]), A(x{u}[.],y{p}[.],z[1])
Init(2) = init(2); % A(x{u}[.],y{u}[.],z[.])
Init(3) = init(3); % A(x{u}[.],y{u}[.],z[1]), A(x{u}[.],y{u}[.],z[1])
Init(4) = init(4); % A(x{u}[.],y{p}[.],z[.])
Init(5) = init(5); % A(x{u}[.],y{u}[.],z[1]), A(x{u}[.],y{p}[.],z[1])
Init(6) = init(6); % A(x{p}[.],y{p}[.],z[.])
Init(7) = init(7); % A(x{u}[.],y{p}[.],z[1]), A(x{p}[.],y{p}[.],z[1])
Init(8) = init(8); % A(x{u}[.],y{u}[.],z[1]), A(x{p}[.],y{p}[.],z[1])
Init(9) = init(9); % A(x{p}[.],y{p}[.],z[1]), A(x{p}[.],y{p}[.],z[1])
Init(10) = init(10); % t
end


function dydt=ode_aux(t,y)

global nodevar
global max_stoc_coef
global var
global k
global kd
global kun
global kdun
global stoc



dydt=zeros(nodevar,1);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{p}[.],z[1]).A(x{u}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(1)=dydt(1)-2*k(2)*y(1)/2;
dydt(7)=dydt(7)+k(2)*y(1)/2;

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{p}[.],z[1]).A(x{u}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(1)=dydt(1)-2*k(2)*y(1)/2;
dydt(7)=dydt(7)+k(2)*y(1)/2;

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{u}[.],z[1]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

dydt(3)=dydt(3)-2*k(2)*y(3)/2;
dydt(5)=dydt(5)+k(2)*y(3)/2;

% rule    : A(y{u}[.]) -> A(y{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{u}[.],z[1]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

dydt(3)=dydt(3)-2*k(3)*y(3)/2;
dydt(5)=dydt(5)+k(3)*y(3)/2;

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{u}[.],z[1]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

dydt(3)=dydt(3)-2*k(2)*y(3)/2;
dydt(5)=dydt(5)+k(2)*y(3)/2;

% rule    : A(y{u}[.]) -> A(y{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{u}[.],z[1]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

dydt(3)=dydt(3)-2*k(3)*y(3)/2;
dydt(5)=dydt(5)+k(3)*y(3)/2;

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

dydt(5)=dydt(5)-k(2)*y(5);
dydt(1)=dydt(1)+2*k(2)*y(5);

% rule    : A(y{u}[.]) -> A(y{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

dydt(5)=dydt(5)-k(3)*y(5);
dydt(1)=dydt(1)+2*k(3)*y(5);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1]) -> A(x{u}[.],y{u}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(5)=dydt(5)-k(2)*y(5);
dydt(8)=dydt(8)+k(2)*y(5);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1]) -> A(x{p}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(7)=dydt(7)-k(2)*y(7);
dydt(9)=dydt(9)+2*k(2)*y(7);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{p}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(8)=dydt(8)-k(2)*y(8);
dydt(7)=dydt(7)+k(2)*y(8);

% rule    : A(y{u}[.]) -> A(y{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{p}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(8)=dydt(8)-k(3)*y(8);
dydt(7)=dydt(7)+k(3)*y(8);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{p}[.],y{p}[.],z[.]) + A(x{p}[.],y{p}[.],z[.]) -> A(x{p}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(6)=dydt(6)-1/2*k(1)*y(6)*y(6);
dydt(6)=dydt(6)-1/2*k(1)*y(6)*y(6);
dydt(9)=dydt(9)+2/2*k(1)*y(6)*y(6);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{p}[.],z[.]) + A(x{p}[.],y{p}[.],z[.]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(6)=dydt(6)-1/2*k(1)*y(6)*y(4);
dydt(4)=dydt(4)-1/2*k(1)*y(6)*y(4);
dydt(7)=dydt(7)+1/2*k(1)*y(6)*y(4);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{u}[.],z[.]) + A(x{p}[.],y{p}[.],z[.]) -> A(x{u}[.],y{u}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(6)=dydt(6)-1/2*k(1)*y(6)*y(2);
dydt(2)=dydt(2)-1/2*k(1)*y(6)*y(2);
dydt(8)=dydt(8)+1/2*k(1)*y(6)*y(2);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{p}[.],y{p}[.],z[.]) + A(x{u}[.],y{u}[.],z[.]) -> A(x{u}[.],y{u}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(2)=dydt(2)-1/2*k(1)*y(2)*y(6);
dydt(6)=dydt(6)-1/2*k(1)*y(2)*y(6);
dydt(8)=dydt(8)+1/2*k(1)*y(2)*y(6);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{p}[.],y{p}[.],z[.]) + A(x{u}[.],y{p}[.],z[.]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

dydt(4)=dydt(4)-1/2*k(1)*y(4)*y(6);
dydt(6)=dydt(6)-1/2*k(1)*y(4)*y(6);
dydt(7)=dydt(7)+1/2*k(1)*y(4)*y(6);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{p}[.],z[.]) -> A(x{p}[.],y{p}[.],z[.])

dydt(4)=dydt(4)-k(2)*y(4);
dydt(6)=dydt(6)+k(2)*y(4);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{p}[.],z[.]) + A(x{u}[.],y{p}[.],z[.]) -> A(x{u}[.],y{p}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

dydt(4)=dydt(4)-1/2*k(1)*y(4)*y(4);
dydt(4)=dydt(4)-1/2*k(1)*y(4)*y(4);
dydt(1)=dydt(1)+2/2*k(1)*y(4)*y(4);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{u}[.],z[.]) + A(x{u}[.],y{p}[.],z[.]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

dydt(4)=dydt(4)-1/2*k(1)*y(4)*y(2);
dydt(2)=dydt(2)-1/2*k(1)*y(4)*y(2);
dydt(5)=dydt(5)+1/2*k(1)*y(4)*y(2);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{p}[.],z[.]) + A(x{u}[.],y{u}[.],z[.]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

dydt(2)=dydt(2)-1/2*k(1)*y(2)*y(4);
dydt(4)=dydt(4)-1/2*k(1)*y(2)*y(4);
dydt(5)=dydt(5)+1/2*k(1)*y(2)*y(4);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[.]) -> A(x{u}[.],y{p}[.],z[.])

dydt(2)=dydt(2)-k(2)*y(2);
dydt(4)=dydt(4)+k(2)*y(2);

% rule    : A(y{u}[.]) -> A(y{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[.]) -> A(x{u}[.],y{p}[.],z[.])

dydt(2)=dydt(2)-k(3)*y(2);
dydt(4)=dydt(4)+k(3)*y(2);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{u}[.],z[.]) + A(x{u}[.],y{u}[.],z[.]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{u}[.],z[1])

dydt(2)=dydt(2)-1/2*k(1)*y(2)*y(2);
dydt(2)=dydt(2)-1/2*k(1)*y(2)*y(2);
dydt(3)=dydt(3)+2/2*k(1)*y(2)*y(2);
dydt(10)=1;

end


function jac=ode_jacobian(t,y)

global nodevar
global max_stoc_coef
global jacvar
global var
global k
global kd
global kun
global kdun
global stoc

global jack
global jackd
global jackun
global jackund
global jacstoc




jac=sparse(nodevar,nodevar);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{p}[.],z[1]).A(x{u}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(1,1)=jac(1,1)-2*k(2)/2;
jac(7,1)=jac(7,1)+k(2)/2;

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{p}[.],z[1]).A(x{u}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(1,1)=jac(1,1)-2*k(2)/2;
jac(7,1)=jac(7,1)+k(2)/2;

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{u}[.],z[1]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

jac(3,3)=jac(3,3)-2*k(2)/2;
jac(5,3)=jac(5,3)+k(2)/2;

% rule    : A(y{u}[.]) -> A(y{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{u}[.],z[1]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

jac(3,3)=jac(3,3)-2*k(3)/2;
jac(5,3)=jac(5,3)+k(3)/2;

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{u}[.],z[1]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

jac(3,3)=jac(3,3)-2*k(2)/2;
jac(5,3)=jac(5,3)+k(2)/2;

% rule    : A(y{u}[.]) -> A(y{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{u}[.],z[1]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

jac(3,3)=jac(3,3)-2*k(3)/2;
jac(5,3)=jac(5,3)+k(3)/2;

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

jac(5,5)=jac(5,5)-k(2);
jac(1,5)=jac(1,5)+2*k(2);

% rule    : A(y{u}[.]) -> A(y{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

jac(5,5)=jac(5,5)-k(3);
jac(1,5)=jac(1,5)+2*k(3);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1]) -> A(x{u}[.],y{u}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(5,5)=jac(5,5)-k(2);
jac(8,5)=jac(8,5)+k(2);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1]) -> A(x{p}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(7,7)=jac(7,7)-k(2);
jac(9,7)=jac(9,7)+2*k(2);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{p}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(8,8)=jac(8,8)-k(2);
jac(7,8)=jac(7,8)+k(2);

% rule    : A(y{u}[.]) -> A(y{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[1]).A(x{p}[.],y{p}[.],z[1]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(8,8)=jac(8,8)-k(3);
jac(7,8)=jac(7,8)+k(3);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{p}[.],y{p}[.],z[.]) + A(x{p}[.],y{p}[.],z[.]) -> A(x{p}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(6,6)=jac(6,6)-1/2*k(1)*y(6);
jac(6,6)=jac(6,6)-1/2*k(1)*y(6);
jac(6,6)=jac(6,6)-1/2*k(1)*y(6);
jac(6,6)=jac(6,6)-1/2*k(1)*y(6);
jac(9,6)=jac(9,6)+2/2*k(1)*y(6);
jac(9,6)=jac(9,6)+2/2*k(1)*y(6);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{p}[.],z[.]) + A(x{p}[.],y{p}[.],z[.]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(6,6)=jac(6,6)-1/2*k(1)*y(4);
jac(6,4)=jac(6,4)-1/2*k(1)*y(6);
jac(4,6)=jac(4,6)-1/2*k(1)*y(4);
jac(4,4)=jac(4,4)-1/2*k(1)*y(6);
jac(7,6)=jac(7,6)+1/2*k(1)*y(4);
jac(7,4)=jac(7,4)+1/2*k(1)*y(6);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{u}[.],z[.]) + A(x{p}[.],y{p}[.],z[.]) -> A(x{u}[.],y{u}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(6,6)=jac(6,6)-1/2*k(1)*y(2);
jac(6,2)=jac(6,2)-1/2*k(1)*y(6);
jac(2,6)=jac(2,6)-1/2*k(1)*y(2);
jac(2,2)=jac(2,2)-1/2*k(1)*y(6);
jac(8,6)=jac(8,6)+1/2*k(1)*y(2);
jac(8,2)=jac(8,2)+1/2*k(1)*y(6);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{p}[.],y{p}[.],z[.]) + A(x{u}[.],y{u}[.],z[.]) -> A(x{u}[.],y{u}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(2,2)=jac(2,2)-1/2*k(1)*y(6);
jac(2,6)=jac(2,6)-1/2*k(1)*y(2);
jac(6,2)=jac(6,2)-1/2*k(1)*y(6);
jac(6,6)=jac(6,6)-1/2*k(1)*y(2);
jac(8,2)=jac(8,2)+1/2*k(1)*y(6);
jac(8,6)=jac(8,6)+1/2*k(1)*y(2);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{p}[.],y{p}[.],z[.]) + A(x{u}[.],y{p}[.],z[.]) -> A(x{u}[.],y{p}[.],z[1]).A(x{p}[.],y{p}[.],z[1])

jac(4,4)=jac(4,4)-1/2*k(1)*y(6);
jac(4,6)=jac(4,6)-1/2*k(1)*y(4);
jac(6,4)=jac(6,4)-1/2*k(1)*y(6);
jac(6,6)=jac(6,6)-1/2*k(1)*y(4);
jac(7,4)=jac(7,4)+1/2*k(1)*y(6);
jac(7,6)=jac(7,6)+1/2*k(1)*y(4);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{p}[.],z[.]) -> A(x{p}[.],y{p}[.],z[.])

jac(4,4)=jac(4,4)-k(2);
jac(6,4)=jac(6,4)+k(2);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{p}[.],z[.]) + A(x{u}[.],y{p}[.],z[.]) -> A(x{u}[.],y{p}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

jac(4,4)=jac(4,4)-1/2*k(1)*y(4);
jac(4,4)=jac(4,4)-1/2*k(1)*y(4);
jac(4,4)=jac(4,4)-1/2*k(1)*y(4);
jac(4,4)=jac(4,4)-1/2*k(1)*y(4);
jac(1,4)=jac(1,4)+2/2*k(1)*y(4);
jac(1,4)=jac(1,4)+2/2*k(1)*y(4);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{u}[.],z[.]) + A(x{u}[.],y{p}[.],z[.]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

jac(4,4)=jac(4,4)-1/2*k(1)*y(2);
jac(4,2)=jac(4,2)-1/2*k(1)*y(4);
jac(2,4)=jac(2,4)-1/2*k(1)*y(2);
jac(2,2)=jac(2,2)-1/2*k(1)*y(4);
jac(5,4)=jac(5,4)+1/2*k(1)*y(2);
jac(5,2)=jac(5,2)+1/2*k(1)*y(4);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{p}[.],z[.]) + A(x{u}[.],y{u}[.],z[.]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{p}[.],z[1])

jac(2,2)=jac(2,2)-1/2*k(1)*y(4);
jac(2,4)=jac(2,4)-1/2*k(1)*y(2);
jac(4,2)=jac(4,2)-1/2*k(1)*y(4);
jac(4,4)=jac(4,4)-1/2*k(1)*y(2);
jac(5,2)=jac(5,2)+1/2*k(1)*y(4);
jac(5,4)=jac(5,4)+1/2*k(1)*y(2);

% rule    : A(x{u}[.]) -> A(x{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[.]) -> A(x{u}[.],y{p}[.],z[.])

jac(2,2)=jac(2,2)-k(2);
jac(4,2)=jac(4,2)+k(2);

% rule    : A(y{u}[.]) -> A(y{p}[.])
% reaction: A(x{u}[.],y{u}[.],z[.]) -> A(x{u}[.],y{p}[.],z[.])

jac(2,2)=jac(2,2)-k(3);
jac(4,2)=jac(4,2)+k(3);

% rule    : A(z[.]), A(z[.]) -> A(z[1]), A(z[1])
% reaction: A(x{u}[.],y{u}[.],z[.]) + A(x{u}[.],y{u}[.],z[.]) -> A(x{u}[.],y{u}[.],z[1]).A(x{u}[.],y{u}[.],z[1])

jac(2,2)=jac(2,2)-1/2*k(1)*y(2);
jac(2,2)=jac(2,2)-1/2*k(1)*y(2);
jac(2,2)=jac(2,2)-1/2*k(1)*y(2);
jac(2,2)=jac(2,2)-1/2*k(1)*y(2);
jac(3,2)=jac(3,2)+2/2*k(1)*y(2);
jac(3,2)=jac(3,2)+2/2*k(1)*y(2);
end


function obs=ode_obs(y)

global nobs
global var
obs=zeros(nobs,1);

t = y(10);

obs(1)=t; % [T]

end


main();

