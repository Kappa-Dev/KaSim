Parsing link_swapping_strong3.ka...
done
+ simulation parameters
+ Sanity checks
+ Compiling...
+ Building initial simulation conditions...
	 -variable declarations
	 -rules
	 -perturbations
	 -observables
	 -update_domain construction
	 8 (sub)observables 6 navigation steps
	 -initial conditions
+ Building initial stateOn roots: 
On roots: 
On roots: 
On roots: 
On roots: 
On roots: 
On roots: 
On roots: 
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 64 instances.
 (8 agents)
Done
+ Command line to rerun is: 'KaSim' '-i' 'link_swapping_strong3.ka' '-seed' '924556145' '-u' 'event' '-l' '30' '-d' 'output' '--debug' '--time-independent' '-syntax' '4'
Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
____________________________________________________________
Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
On roots: 6 0
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 36 instances.
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 2 instances.
Obtained
%init: 1 A(x!1, y), A(x!1, y)
%init: 6 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
On roots: 3 2
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 16 instances.
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 4 instances.
Obtained
%init: 2 A(x!1, y), A(x!1, y)
%init: 4 A(x, y)

##Applied 1:
(ast: 2) 0: /*cc2*/ A/*1*/(x[1] y[.]), A/*2*/(x[1] y[.])
-- A/*2*//*0*/.y = ⊥, A/*1*//*0*/.y = ⊥ ++ A/*2*//*0*/.y = A/*1*//*0*/.y
@1
On roots: 3
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 2 instances.
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 2 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 1 A(x!1, y), A(x!1, y)
%init: 4 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
On roots: 4 5
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 4 instances.
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 4 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 2 A(x!1, y), A(x!1, y)
%init: 2 A(x, y)

##Applied 2:
(ast: 3) 0: /*cc3*/ A/*1*/(x[1] y[2]), A/*2*/(x[1] y[2])
-- A/*2*//*0*/.y = A/*1*//*0*/.y, A/*2*//*0*/.x = A/*1*//*0*/.x
++ A/*2*//*0*/.y = A/*1*//*0*/.x, A/*2*//*0*/.x = A/*1*//*0*/.y @1
On roots: 2
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 0 instances.
Rule GOAL has now 2 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!2, y!1)
%init: 2 A(x!1, y), A(x!1, y)
%init: 2 A(x, y)

##Applied 1:
(ast: 2) 0: /*cc2*/ A/*1*/(x[1] y[.]), A/*2*/(x[1] y[.])
-- A/*2*//*0*/.y = ⊥, A/*1*//*0*/.y = ⊥ ++ A/*2*//*0*/.y = A/*1*//*0*/.y
@1
On roots: 0
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 2 instances.
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 2 instances.
Obtained
%init: 1 A(x!1, y), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!2, y!1)
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 2 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 2 instances.
Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
On roots: 7 1
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 0 instances.
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 4 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!2, y!1)
%init: 2 A(x!1, y), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!1, y!2)

##Applied 3:
(ast: 4) 0: /*cc4*/ A/*1*/(x[1]), A/*2*/(y[1])
-- A/*2*//*0*/.y = A/*1*//*0*/.x ++ A/*2*//*0*/.y = ⊥, A/*1*//*0*/.x = ⊥
@1
On roots: 3
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 1 instances.
Rule GOAL has now 1 instances.
Obtained
%init: 1 A(x!1, y), A(x, y!1)
%init: 2 A(x!1, y), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!1, y!2)

##Applied 2:
(ast: 3) 0: /*cc3*/ A/*1*/(x[1] y[2]), A/*2*/(x[1] y[2])
-- A/*2*//*0*/.y = A/*1*//*0*/.y, A/*2*//*0*/.x = A/*1*//*0*/.x
++ A/*2*//*0*/.y = A/*1*//*0*/.x, A/*2*//*0*/.x = A/*1*//*0*/.y @1
On roots: 6
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 0 instances.
Rule GOAL has now 3 instances.
Obtained
%init: 1 A(x!1, y), A(x, y!1)
%init: 2 A(x!1, y), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!2, y!1)

##Applied 1:
(ast: 2) 0: /*cc2*/ A/*1*/(x[1] y[.]), A/*2*/(x[1] y[.])
-- A/*2*//*0*/.y = ⊥, A/*1*//*0*/.y = ⊥ ++ A/*2*//*0*/.y = A/*1*//*0*/.y
@1
On roots: 4
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 2 instances.
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 2 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 1 A(x!1, y), A(x, y!1)
%init: 1 A(x!1, y), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!2, y!1)

##Applied 3:
(ast: 4) 0: /*cc4*/ A/*1*/(x[1]), A/*2*/(y[1])
-- A/*2*//*0*/.y = A/*1*//*0*/.x ++ A/*2*//*0*/.y = ⊥, A/*1*//*0*/.x = ⊥
@1
On roots: 2
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 4 instances.
Rule GOAL has now 2 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 1 A(x!1, y), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!2, y!1)
%init: 2 A(x, y)

##Applied 1:
(ast: 2) 0: /*cc2*/ A/*1*/(x[1] y[.]), A/*2*/(x[1] y[.])
-- A/*2*//*0*/.y = ⊥, A/*1*//*0*/.y = ⊥ ++ A/*2*//*0*/.y = A/*1*//*0*/.y
@1
On roots: 1
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 0 instances.
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 4 instances.
Obtained
%init: 2 A(x!1, y!2), A(x!1, y!2)
%init: 1 A(x!1, y!2), A(x!2, y!1)
%init: 2 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
Applied 2:
(ast: 3) 0: /*cc3*/ A/*1*/(x[1] y[2]), A/*2*/(x[1] y[2])
-- A/*2*//*0*/.y = A/*1*//*0*/.y, A/*2*//*0*/.x = A/*1*//*0*/.x
++ A/*2*//*0*/.y = A/*1*//*0*/.x, A/*2*//*0*/.x = A/*1*//*0*/.y @1
On roots: 1
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 2 instances.
Rule GOAL has now 4 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 2 A(x!1, y!2), A(x!2, y!1)
%init: 2 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
Applied 2:
(ast: 3) 0: /*cc3*/ A/*1*/(x[1] y[2]), A/*2*/(x[1] y[2])
-- A/*2*//*0*/.y = A/*1*//*0*/.y, A/*2*//*0*/.x = A/*1*//*0*/.x
++ A/*2*//*0*/.y = A/*1*//*0*/.x, A/*2*//*0*/.x = A/*1*//*0*/.y @1
On roots: 4
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 0 instances.
Rule GOAL has now 6 instances.
Obtained
%init: 3 A(x!1, y!2), A(x!2, y!1)
%init: 2 A(x, y)

##Applied 3:
(ast: 4) 0: /*cc4*/ A/*1*/(x[1]), A/*2*/(y[1])
-- A/*2*//*0*/.y = A/*1*//*0*/.x ++ A/*2*//*0*/.y = ⊥, A/*1*//*0*/.x = ⊥
@1
On roots: 4
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 9 instances.
Rule GOAL has now 5 instances.
Obtained
%init: 1 A(x, y!1), A(x!1, y)
%init: 2 A(x!1, y!2), A(x!2, y!1)
%init: 2 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
On roots: 4 2
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 1 instances.
Obtained
%init: 1 A(x!1, y), A(x!1, y!2), A(x!2, y)
%init: 2 A(x!1, y!2), A(x!2, y!1)
%init: 1 A(x, y)

##Applied 3:
(ast: 4) 0: /*cc4*/ A/*1*/(x[1]), A/*2*/(y[1])
-- A/*2*//*0*/.y = A/*1*//*0*/.x ++ A/*2*//*0*/.y = ⊥, A/*1*//*0*/.x = ⊥
@1
On roots: 5
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 4 instances.
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 2 instances.
Rule GOAL has now 4 instances.
Obtained
%init: 1 A(x!1, y), A(x!1, y)
%init: 2 A(x!1, y!2), A(x!2, y!1)
%init: 2 A(x, y)

##Applied 3:
(ast: 4) 0: /*cc4*/ A/*1*/(x[1]), A/*2*/(y[1])
-- A/*2*//*0*/.y = A/*1*//*0*/.x ++ A/*2*//*0*/.y = ⊥, A/*1*//*0*/.x = ⊥
@1
On roots: 1
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 9 instances.
Rule GOAL has now 3 instances.
Obtained
%init: 1 A(x!1, y), A(x!1, y)
%init: 1 A(x, y!1), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!2, y!1)
%init: 2 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
On roots: 5 1
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 1 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y), A(x!2, y)
%init: 1 A(x!1, y), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!2, y!1)
%init: 1 A(x, y)

##Applied 3:
(ast: 4) 0: /*cc4*/ A/*1*/(x[1]), A/*2*/(y[1])
-- A/*2*//*0*/.y = A/*1*//*0*/.x ++ A/*2*//*0*/.y = ⊥, A/*1*//*0*/.x = ⊥
@1
On roots: 0
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 4 instances.
Rule GOAL has now 2 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y), A(x!2, y)
%init: 1 A(x!1, y), A(x!1, y)
%init: 1 A(x, y!1), A(x!1, y)
%init: 1 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
On roots: 3 0
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 0 instances.
Obtained
%init: 2 A(x!1, y!2), A(x!1, y), A(x!2, y)
%init: 1 A(x!1, y), A(x!1, y)

##Applied 3:
(ast: 4) 0: /*cc4*/ A/*1*/(x[1]), A/*2*/(y[1])
-- A/*2*//*0*/.y = A/*1*//*0*/.x ++ A/*2*//*0*/.y = ⊥, A/*1*//*0*/.x = ⊥
@1
On roots: 6
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 1 instances.
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 4 instances.
Rule GOAL has now 1 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y), A(x!2, y)
%init: 2 A(x!1, y), A(x!1, y)
%init: 1 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
Applied 1:
(ast: 2) 0: /*cc2*/ A/*1*/(x[1] y[.]), A/*2*/(x[1] y[.])
-- A/*2*//*0*/.y = ⊥, A/*1*//*0*/.y = ⊥ ++ A/*2*//*0*/.y = A/*1*//*0*/.y
@1
On roots: 2
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 2 instances.
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 2 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y), A(x!2, y)
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 1 A(x!1, y), A(x!1, y)
%init: 1 A(x, y)

##Applied 1:
(ast: 2) 0: /*cc2*/ A/*1*/(x[1] y[.]), A/*2*/(x[1] y[.])
-- A/*2*//*0*/.y = ⊥, A/*1*//*0*/.y = ⊥ ++ A/*2*//*0*/.y = A/*1*//*0*/.y
@1
On roots: 3
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 0 instances.
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 4 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y), A(x!2, y)
%init: 2 A(x!1, y!2), A(x!1, y!2)
%init: 1 A(x, y)

##Applied 2:
(ast: 3) 0: /*cc3*/ A/*1*/(x[1] y[2]), A/*2*/(x[1] y[2])
-- A/*2*//*0*/.y = A/*1*//*0*/.y, A/*2*//*0*/.x = A/*1*//*0*/.x
++ A/*2*//*0*/.y = A/*1*//*0*/.x, A/*2*//*0*/.x = A/*1*//*0*/.y @1
On roots: 4
Rule A(x[1] y[2]), A(x[1] y[2]) -> A(x[1] y[2]), A(x[2] y[1]) has now 2 instances.
Rule GOAL has now 3 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y), A(x!2, y)
%init: 1 A(x!1, y!2), A(x!2, y!1)
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 1 A(x, y)

##Applied 3:
(ast: 4) 0: /*cc4*/ A/*1*/(x[1]), A/*2*/(y[1])
-- A/*2*//*0*/.y = A/*1*//*0*/.x ++ A/*2*//*0*/.y = ⊥, A/*1*//*0*/.x = ⊥
@1
On roots: 4
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 4 instances.
Rule GOAL has now 2 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y), A(x!2, y)
%init: 1 A(x!1, y), A(x, y!1)
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 1 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 2 instances.
Applied 3:
(ast: 4) 0: /*cc4*/ A/*1*/(x[1]), A/*2*/(y[1])
-- A/*2*//*0*/.y = A/*1*//*0*/.x ++ A/*2*//*0*/.y = ⊥, A/*1*//*0*/.x = ⊥
@1
On roots: 2
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 9 instances.
Rule GOAL has now 1 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y), A(x!2, y)
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 3 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
On roots: 6 4
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 1 instances.
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 2 instances.
Obtained
%init: 1 A(x!1, y!2), A(x!1, y), A(x!2, y)
%init: 1 A(x!1, y), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 1 A(x, y)

##Applied 3:
(ast: 4) 0: /*cc4*/ A/*1*/(x[1]), A/*2*/(y[1])
-- A/*2*//*0*/.y = A/*1*//*0*/.x ++ A/*2*//*0*/.y = ⊥, A/*1*//*0*/.x = ⊥
@1
On roots: 7
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 4 instances.
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 4 instances.
Rule GOAL has now 0 instances.
Obtained
%init: 2 A(x!1, y), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!1, y!2)
%init: 2 A(x, y)

##Applied 0:
(ast: 1) 0: /*cc1*/ A/*1*/(x[.]), 1: /*cc1*/ A/*1*/(x[.])
-- A/*1*//*1*/.x = ⊥, A/*1*//*0*/.x = ⊥ ++ A/*1*//*1*/.x = A/*1*//*0*/.x
@1
On roots: 2 7
Rule A(x[.]), A(x[.]) -> A(x[1]), A(x[1]) has now 0 instances.
Rule A(x[1] y[.]), A(x[1] y[.]) -> A(x[1] y[1]), A(x[1] y[1]) has now 6 instances.
Obtained
%init: 3 A(x!1, y), A(x!1, y)
%init: 1 A(x!1, y!2), A(x!1, y!2)

##
+ Loading trace
	- removing events occurring after the last observable: -5 events 
+ Producing causal compressions
	- splitting initial events: nothing has changed 
	- simplify the trace, 43 events 
		- start iteration 1, 43 events remaining 
				- alpha-conversion
				- detecting siphons: +4 events 
				- alpha-conversion
				- cutting concurrent events: -11 events 
				- detecting pseudo inverse events: nothing has changed 
		- start iteration 2, 36 events remaining 
				- alpha-conversion
				- detecting siphons: +1 events 
				- alpha-conversion
				- cutting concurrent events: -1 events 
				- detecting pseudo inverse events: nothing has changed 
	- a fixpoint has been reached, 36 events remaining 
	- blackboard generation 
	- computing causal past of each observed events (10)


	 - weak flow compression (2)

____________________________________________________________
############################################################

	 - strong flow compression (1)

____________________________________________________________
############################################################

+ Pretty printing 1 weakly compressed flow
+ Pretty printing 1 strongly compressed flow
Simulation ended
76.92% of event loops were productive. Null event cause:
	Clashing instance: 100.00%
