Parsing sym3.ka...
done
+ simulation parameters
+ Sanity checks
+ Compiling...
+ Building initial simulation conditions...
	 -variable declarations
	 -rules
	 -perturbations
	 -observables
	 -update_domain construction
	 18 (sub)observables 12 navigation steps
	 -initial conditions
Parsing sym3.ka...
done
Scan rules!
Signature:
Signature:agents:
Signature:agents:agent_type:0:A
Signature:sites:
Signature:sites:0:
Signature:sites:0:site_type:0->x(internal state)
Signature:sites:0:site_type:1->y(internal state)
Signature:sites:0:site_type:2->w(internal state)
Signature:sites:0:site_type:3->t(internal state)
Signature:states: 
Signature:states:0:
Signature:states:0:0:
Signature:states:0:0:state_id:0->u
Signature:states:0:0:state_id:1->p
Signature:states:0:1:
Signature:states:0:1:state_id:0->u
Signature:states:0:1:state_id:1->p
Signature:states:0:2:
Signature:states:0:2:state_id:0->u
Signature:states:0:2:state_id:1->p
Signature:states:0:3:
Signature:states:0:3:state_id:0->u
Signature:states:0:3:state_id:1->p
Signature:duals: 
Compiling...
Generating the raw contact map...
Compilation:Compilation:rules:0:
Compilation:rules:0:lhs:
Compilation:rules:0:lhs:agent_id_0:
Compilation:rules:0:lhs:agent_id_0:agent_type_0:site_type_0->state:[state_min:0;state_max:0]
Compilation:rules:0:lhs:agent_id_0:agent_type_0:site_type_1->state:[state_min:0;state_max:0]
Compilation:rules:0:rhs:
Compilation:rules:0:rhs:agent_id_0:
Compilation:rules:0:rhs:agent_id_0:agent_type_0:site_type_0->state:[state_min:1;state_max:1]
Compilation:rules:0:rhs:agent_id_0:agent_type_0:site_type_1->state:[state_min:0;state_max:0]
Compilation:rules:0:direct:
Compilation:rules:0:direct:agent_id_0:
Compilation:rules:0:direct:agent_id_0:agent_type_0:site_type_0->state:[state_min:1;state_max:1]
Compilation:rules:0:reverse:
Compilation:rules:0:reverse:agent_id_0:
Compilation:rules:0:reverse:agent_id_0:agent_type_0:site_type_0->state:[state_min:0;state_max:0]
Compilation:rules:1:
Compilation:rules:1:lhs:
Compilation:rules:1:lhs:agent_id_0:
Compilation:rules:1:lhs:agent_id_0:agent_type_0:site_type_0->state:[state_min:0;state_max:0]
Compilation:rules:1:lhs:agent_id_0:agent_type_0:site_type_1->state:[state_min:0;state_max:0]
Compilation:rules:1:rhs:
Compilation:rules:1:rhs:agent_id_0:
Compilation:rules:1:rhs:agent_id_0:agent_type_0:site_type_0->state:[state_min:0;state_max:0]
Compilation:rules:1:rhs:agent_id_0:agent_type_0:site_type_1->state:[state_min:1;state_max:1]
Compilation:rules:1:direct:
Compilation:rules:1:direct:agent_id_0:
Compilation:rules:1:direct:agent_id_0:agent_type_0:site_type_1->state:[state_min:1;state_max:1]
Compilation:rules:1:reverse:
Compilation:rules:1:reverse:agent_id_0:
Compilation:rules:1:reverse:agent_id_0:agent_type_0:site_type_1->state:[state_min:0;state_max:0]
Compilation:rules:2:
Compilation:rules:2:lhs:
Compilation:rules:2:lhs:agent_id_0:
Compilation:rules:2:lhs:agent_id_0:agent_type_0:site_type_0->state:[state_min:0;state_max:0]
Compilation:rules:2:lhs:agent_id_0:agent_type_0:site_type_1->state:[state_min:1;state_max:1]
Compilation:rules:2:rhs:
Compilation:rules:2:rhs:agent_id_0:
Compilation:rules:2:rhs:agent_id_0:agent_type_0:site_type_0->state:[state_min:1;state_max:1]
Compilation:rules:2:rhs:agent_id_0:agent_type_0:site_type_1->state:[state_min:1;state_max:1]
Compilation:rules:2:direct:
Compilation:rules:2:direct:agent_id_0:
Compilation:rules:2:direct:agent_id_0:agent_type_0:site_type_0->state:[state_min:1;state_max:1]
Compilation:rules:2:reverse:
Compilation:rules:2:reverse:agent_id_0:
Compilation:rules:2:reverse:agent_id_0:agent_type_0:site_type_0->state:[state_min:0;state_max:0]
Compilation:rules:3:
Compilation:rules:3:lhs:
Compilation:rules:3:lhs:agent_id_0:
Compilation:rules:3:lhs:agent_id_0:agent_type_0:site_type_0->state:[state_min:1;state_max:1]
Compilation:rules:3:lhs:agent_id_0:agent_type_0:site_type_1->state:[state_min:0;state_max:0]
Compilation:rules:3:rhs:
Compilation:rules:3:rhs:agent_id_0:
Compilation:rules:3:rhs:agent_id_0:agent_type_0:site_type_0->state:[state_min:1;state_max:1]
Compilation:rules:3:rhs:agent_id_0:agent_type_0:site_type_1->state:[state_min:1;state_max:1]
Compilation:rules:3:direct:
Compilation:rules:3:direct:agent_id_0:
Compilation:rules:3:direct:agent_id_0:agent_type_0:site_type_1->state:[state_min:1;state_max:1]
Compilation:rules:3:reverse:
Compilation:rules:3:reverse:agent_id_0:
Compilation:rules:3:reverse:agent_id_0:agent_type_0:site_type_1->state:[state_min:0;state_max:0]
Compilation:rules:4:
Compilation:rules:4:lhs:
Compilation:rules:4:lhs:agent_id_0:
Compilation:rules:4:lhs:agent_id_0:agent_type_0:site_type_2->state:[state_min:0;state_max:0]
Compilation:rules:4:lhs:agent_id_0:agent_type_0:site_type_3->state:[state_min:0;state_max:0]
Compilation:rules:4:rhs:
Compilation:rules:4:rhs:agent_id_0:
Compilation:rules:4:rhs:agent_id_0:agent_type_0:site_type_2->state:[state_min:1;state_max:1]
Compilation:rules:4:rhs:agent_id_0:agent_type_0:site_type_3->state:[state_min:0;state_max:0]
Compilation:rules:4:direct:
Compilation:rules:4:direct:agent_id_0:
Compilation:rules:4:direct:agent_id_0:agent_type_0:site_type_2->state:[state_min:1;state_max:1]
Compilation:rules:4:reverse:
Compilation:rules:4:reverse:agent_id_0:
Compilation:rules:4:reverse:agent_id_0:agent_type_0:site_type_2->state:[state_min:0;state_max:0]
Compilation:rules:5:
Compilation:rules:5:lhs:
Compilation:rules:5:lhs:agent_id_0:
Compilation:rules:5:lhs:agent_id_0:agent_type_0:site_type_2->state:[state_min:0;state_max:0]
Compilation:rules:5:lhs:agent_id_0:agent_type_0:site_type_3->state:[state_min:0;state_max:0]
Compilation:rules:5:rhs:
Compilation:rules:5:rhs:agent_id_0:
Compilation:rules:5:rhs:agent_id_0:agent_type_0:site_type_2->state:[state_min:0;state_max:0]
Compilation:rules:5:rhs:agent_id_0:agent_type_0:site_type_3->state:[state_min:1;state_max:1]
Compilation:rules:5:direct:
Compilation:rules:5:direct:agent_id_0:
Compilation:rules:5:direct:agent_id_0:agent_type_0:site_type_3->state:[state_min:1;state_max:1]
Compilation:rules:5:reverse:
Compilation:rules:5:reverse:agent_id_0:
Compilation:rules:5:reverse:agent_id_0:agent_type_0:site_type_3->state:[state_min:0;state_max:0]
Compilation:rules:6:
Compilation:rules:6:lhs:
Compilation:rules:6:lhs:agent_id_0:
Compilation:rules:6:lhs:agent_id_0:agent_type_0:site_type_2->state:[state_min:0;state_max:0]
Compilation:rules:6:lhs:agent_id_0:agent_type_0:site_type_3->state:[state_min:1;state_max:1]
Compilation:rules:6:rhs:
Compilation:rules:6:rhs:agent_id_0:
Compilation:rules:6:rhs:agent_id_0:agent_type_0:site_type_2->state:[state_min:1;state_max:1]
Compilation:rules:6:rhs:agent_id_0:agent_type_0:site_type_3->state:[state_min:1;state_max:1]
Compilation:rules:6:direct:
Compilation:rules:6:direct:agent_id_0:
Compilation:rules:6:direct:agent_id_0:agent_type_0:site_type_2->state:[state_min:1;state_max:1]
Compilation:rules:6:reverse:
Compilation:rules:6:reverse:agent_id_0:
Compilation:rules:6:reverse:agent_id_0:agent_type_0:site_type_2->state:[state_min:0;state_max:0]
Compilation:rules:7:
Compilation:rules:7:lhs:
Compilation:rules:7:lhs:agent_id_0:
Compilation:rules:7:lhs:agent_id_0:agent_type_0:site_type_2->state:[state_min:1;state_max:1]
Compilation:rules:7:lhs:agent_id_0:agent_type_0:site_type_3->state:[state_min:0;state_max:0]
Compilation:rules:7:rhs:
Compilation:rules:7:rhs:agent_id_0:
Compilation:rules:7:rhs:agent_id_0:agent_type_0:site_type_2->state:[state_min:1;state_max:1]
Compilation:rules:7:rhs:agent_id_0:agent_type_0:site_type_3->state:[state_min:1;state_max:1]
Compilation:rules:7:direct:
Compilation:rules:7:direct:agent_id_0:
Compilation:rules:7:direct:agent_id_0:agent_type_0:site_type_3->state:[state_min:1;state_max:1]
Compilation:rules:7:reverse:
Compilation:rules:7:reverse:agent_id_0:
Compilation:rules:7:reverse:agent_id_0:agent_type_0:site_type_3->state:[state_min:0;state_max:0]
Compilation:initial_states:0:
Compilation:initial_states:0:mixture:
Compilation:initial_states:0:mixture:agent_id_0:
Generating the raw influence map...
Quarks:Quarkify
Quarks:Rule 0
Quarks:TEST
Quarks:rule_id:0,agent_type:0
Quarks:rule_id:0,agent_type:0,site_type:0,state:0
Quarks:rule_id:0,agent_type:0,site_type:1,state:0
Quarks:CLEANING QUARKS FOR DEAD AGENTS
Quarks:CREATION
Quarks:REMOVAL
Quarks:MODIFICATION+
Quarks:rule_id:0,agent_type:0,site_type:0,state:1
Quarks:MODIFICATION-
Quarks:rule_id:0,agent_type:0,site_type:0,state:0
Quarks:HALF BOND BREAKING
Quarks:Rule 1
Quarks:TEST
Quarks:rule_id:1,agent_type:0
Quarks:rule_id:1,agent_type:0,site_type:0,state:0
Quarks:rule_id:1,agent_type:0,site_type:1,state:0
Quarks:CLEANING QUARKS FOR DEAD AGENTS
Quarks:CREATION
Quarks:REMOVAL
Quarks:MODIFICATION+
Quarks:rule_id:1,agent_type:0,site_type:1,state:1
Quarks:MODIFICATION-
Quarks:rule_id:1,agent_type:0,site_type:1,state:0
Quarks:HALF BOND BREAKING
Quarks:Rule 2
Quarks:TEST
Quarks:rule_id:2,agent_type:0
Quarks:rule_id:2,agent_type:0,site_type:0,state:0
Quarks:rule_id:2,agent_type:0,site_type:1,state:1
Quarks:CLEANING QUARKS FOR DEAD AGENTS
Quarks:CREATION
Quarks:REMOVAL
Quarks:MODIFICATION+
Quarks:rule_id:2,agent_type:0,site_type:0,state:1
Quarks:MODIFICATION-
Quarks:rule_id:2,agent_type:0,site_type:0,state:0
Quarks:HALF BOND BREAKING
Quarks:Rule 3
Quarks:TEST
Quarks:rule_id:3,agent_type:0
Quarks:rule_id:3,agent_type:0,site_type:0,state:1
Quarks:rule_id:3,agent_type:0,site_type:1,state:0
Quarks:CLEANING QUARKS FOR DEAD AGENTS
Quarks:CREATION
Quarks:REMOVAL
Quarks:MODIFICATION+
Quarks:rule_id:3,agent_type:0,site_type:1,state:1
Quarks:MODIFICATION-
Quarks:rule_id:3,agent_type:0,site_type:1,state:0
Quarks:HALF BOND BREAKING
Quarks:Rule 4
Quarks:TEST
Quarks:rule_id:4,agent_type:0
Quarks:rule_id:4,agent_type:0,site_type:2,state:0
Quarks:rule_id:4,agent_type:0,site_type:3,state:0
Quarks:CLEANING QUARKS FOR DEAD AGENTS
Quarks:CREATION
Quarks:REMOVAL
Quarks:MODIFICATION+
Quarks:rule_id:4,agent_type:0,site_type:2,state:1
Quarks:MODIFICATION-
Quarks:rule_id:4,agent_type:0,site_type:2,state:0
Quarks:HALF BOND BREAKING
Quarks:Rule 5
Quarks:TEST
Quarks:rule_id:5,agent_type:0
Quarks:rule_id:5,agent_type:0,site_type:2,state:0
Quarks:rule_id:5,agent_type:0,site_type:3,state:0
Quarks:CLEANING QUARKS FOR DEAD AGENTS
Quarks:CREATION
Quarks:REMOVAL
Quarks:MODIFICATION+
Quarks:rule_id:5,agent_type:0,site_type:3,state:1
Quarks:MODIFICATION-
Quarks:rule_id:5,agent_type:0,site_type:3,state:0
Quarks:HALF BOND BREAKING
Quarks:Rule 6
Quarks:TEST
Quarks:rule_id:6,agent_type:0
Quarks:rule_id:6,agent_type:0,site_type:2,state:0
Quarks:rule_id:6,agent_type:0,site_type:3,state:1
Quarks:CLEANING QUARKS FOR DEAD AGENTS
Quarks:CREATION
Quarks:REMOVAL
Quarks:MODIFICATION+
Quarks:rule_id:6,agent_type:0,site_type:2,state:1
Quarks:MODIFICATION-
Quarks:rule_id:6,agent_type:0,site_type:2,state:0
Quarks:HALF BOND BREAKING
Quarks:Rule 7
Quarks:TEST
Quarks:rule_id:7,agent_type:0
Quarks:rule_id:7,agent_type:0,site_type:2,state:1
Quarks:rule_id:7,agent_type:0,site_type:3,state:0
Quarks:CLEANING QUARKS FOR DEAD AGENTS
Quarks:CREATION
Quarks:REMOVAL
Quarks:MODIFICATION+
Quarks:rule_id:7,agent_type:0,site_type:3,state:1
Quarks:MODIFICATION-
Quarks:rule_id:7,agent_type:0,site_type:3,state:0
Quarks:HALF BOND BREAKING

REMARKS: The notation [i] is a position of an agent in a rule/var. If a position is a negative number [-i], then it refers an agent that is connected to the agent at position (i-1) that is modified by side effects.
Quarks:agent_test**:agent_type:0,rule:0->[0]
Quarks:agent_test**:agent_type:0,rule:1->[0]
Quarks:agent_test**:agent_type:0,rule:2->[0]
Quarks:agent_test**:agent_type:0,rule:3->[0]
Quarks:agent_test**:agent_type:0,rule:4->[0]
Quarks:agent_test**:agent_type:0,rule:5->[0]
Quarks:agent_test**:agent_type:0,rule:6->[0]
Quarks:agent_test**:agent_type:0,rule:7->[0]
Quarks:site_test**:agent_type:0,site_type:0,state:0,rule:0->[0]
Quarks:site_test**:agent_type:0,site_type:0,state:0,rule:1->[0]
Quarks:site_test**:agent_type:0,site_type:0,state:0,rule:2->[0]
Quarks:site_test**:agent_type:0,site_type:0,state:1,rule:3->[0]
Quarks:site_test**:agent_type:0,site_type:1,state:0,rule:0->[0]
Quarks:site_test**:agent_type:0,site_type:1,state:0,rule:1->[0]
Quarks:site_test**:agent_type:0,site_type:1,state:0,rule:3->[0]
Quarks:site_test**:agent_type:0,site_type:1,state:1,rule:2->[0]
Quarks:site_test**:agent_type:0,site_type:2,state:0,rule:4->[0]
Quarks:site_test**:agent_type:0,site_type:2,state:0,rule:5->[0]
Quarks:site_test**:agent_type:0,site_type:2,state:0,rule:6->[0]
Quarks:site_test**:agent_type:0,site_type:2,state:1,rule:7->[0]
Quarks:site_test**:agent_type:0,site_type:3,state:0,rule:4->[0]
Quarks:site_test**:agent_type:0,site_type:3,state:0,rule:5->[0]
Quarks:site_test**:agent_type:0,site_type:3,state:0,rule:7->[0]
Quarks:site_test**:agent_type:0,site_type:3,state:1,rule:6->[0]
Quarks:site_modif+:agent_type:0,site_type:0,state:1,rule:0->[0]
Quarks:site_modif+:agent_type:0,site_type:0,state:1,rule:2->[0]
Quarks:site_modif+:agent_type:0,site_type:1,state:1,rule:1->[0]
Quarks:site_modif+:agent_type:0,site_type:1,state:1,rule:3->[0]
Quarks:site_modif+:agent_type:0,site_type:2,state:1,rule:4->[0]
Quarks:site_modif+:agent_type:0,site_type:2,state:1,rule:6->[0]
Quarks:site_modif+:agent_type:0,site_type:3,state:1,rule:5->[0]
Quarks:site_modif+:agent_type:0,site_type:3,state:1,rule:7->[0]
Quarks:site_modif-:agent_type:0,site_type:0,state:0,rule:0->[0]
Quarks:site_modif-:agent_type:0,site_type:0,state:0,rule:2->[0]
Quarks:site_modif-:agent_type:0,site_type:1,state:0,rule:1->[0]
Quarks:site_modif-:agent_type:0,site_type:1,state:0,rule:3->[0]
Quarks:site_modif-:agent_type:0,site_type:2,state:0,rule:4->[0]
Quarks:site_modif-:agent_type:0,site_type:2,state:0,rule:6->[0]
Quarks:site_modif-:agent_type:0,site_type:3,state:0,rule:5->[0]
Quarks:site_modif-:agent_type:0,site_type:3,state:0,rule:7->[0]
Refining the influence map...
Influence_map: The notation [i -> j] means an agent at position [i] of the first rule/var has an influence to an agent at position [j] of the second rule/var.
Influence_map:Wake_up_map:rule(0):'' A(x{u}[.],y{u}[.])->A(x{p}[.],y{u}[.]) -> rule(3):'' A(x{p}[.],y{u}[.])->A(x{p}[.],y{p}[.])[0->0]
Influence_map:Wake_up_map:rule(1):'' A(x{u}[.],y{u}[.])->A(x{u}[.],y{p}[.]) -> rule(2):'' A(x{u}[.],y{p}[.])->A(x{p}[.],y{p}[.])[0->0]
Influence_map:Wake_up_map:rule(4):'' A(w{u}[.],t{u}[.])->A(w{p}[.],t{u}[.]) -> rule(7):'' A(w{p}[.],t{u}[.])->A(w{p}[.],t{p}[.])[0->0]
Influence_map:Wake_up_map:rule(5):'' A(w{u}[.],t{u}[.])->A(w{u}[.],t{p}[.]) -> rule(6):'' A(w{u}[.],t{p}[.])->A(w{p}[.],t{p}[.])[0->0]
Influence_map:Inhibition_map:rule(0):'' A(x{u}[.],y{u}[.])->A(x{p}[.],y{u}[.]) -> rule(1):'' A(x{u}[.],y{u}[.])->A(x{u}[.],y{p}[.])[0->0]
Influence_map:Inhibition_map:rule(1):'' A(x{u}[.],y{u}[.])->A(x{u}[.],y{p}[.]) -> rule(0):'' A(x{u}[.],y{u}[.])->A(x{p}[.],y{u}[.])[0->0]
Influence_map:Inhibition_map:rule(4):'' A(w{u}[.],t{u}[.])->A(w{p}[.],t{u}[.]) -> rule(5):'' A(w{u}[.],t{u}[.])->A(w{u}[.],t{p}[.])[0->0]
Influence_map:Inhibition_map:rule(5):'' A(w{u}[.],t{u}[.])->A(w{u}[.],t{p}[.]) -> rule(4):'' A(w{u}[.],t{u}[.])->A(w{p}[.],t{u}[.])[0->0]
Reachability analysis...
	Views in initial state:

INTENSIONAL DESCRIPTION:
Id=7
 Node(site_type:1<0)
  Id=0
   Leaf False 

  Id=6
   Node(site_type:1<1)
    Id=5
     Node(site_type:2<0)
      Id=0
       Leaf False 

      Id=4
       Node(site_type:2<1)
        Id=1
         Leaf True 

        Id=0
         Leaf False 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
		A( w{}{u} ,t{}{u} )

	Views in initial state:

INTENSIONAL DESCRIPTION:
Id=7
 Node(site_type:1<0)
  Id=0
   Leaf False 

  Id=6
   Node(site_type:1<1)
    Id=5
     Node(site_type:2<0)
      Id=0
       Leaf False 

      Id=4
       Node(site_type:2<1)
        Id=1
         Leaf True 

        Id=0
         Leaf False 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
		A( x{}{u} ,y{}{u} )


	Applying rule A(x{u}[.] y{u}[.]) -> A(x{p}[.] y{u}[.]) (File "sym3.ka", line 1, characters 0-44:):
		the precondition is satisfied

		rule A(x{u}[.] y{u}[.]) -> A(x{p}[.] y{u}[.]) (File "sym3.ka", line 1, characters 0-44:) is applied for the first time

		Updating the views for A(x{},y{})

INTENSIONAL DESCRIPTION:
Id=15
 Node(site_type:1<1)
  Id=0
   Leaf False 

  Id=14
   Node(site_type:1<2)
    Id=5
     Node(site_type:2<0)
      Id=0
       Leaf False 

      Id=4
       Node(site_type:2<1)
        Id=1
         Leaf True 

        Id=0
         Leaf False 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
		A( x{}{p} ,y{}{u} )


	Applying rule A(x{u}[.] y{u}[.]) -> A(x{u}[.] y{p}[.]) (File "sym3.ka", line 2, characters 0-44:):
		the precondition is satisfied

		rule A(x{u}[.] y{u}[.]) -> A(x{u}[.] y{p}[.]) (File "sym3.ka", line 2, characters 0-44:) is applied for the first time

		Updating the views for A(x{},y{})

INTENSIONAL DESCRIPTION:
Id=11
 Node(site_type:1<0)
  Id=0
   Leaf False 

  Id=10
   Node(site_type:1<1)
    Id=9
     Node(site_type:2<1)
      Id=0
       Leaf False 

      Id=8
       Node(site_type:2<2)
        Id=1
         Leaf True 

        Id=0
         Leaf False 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
		A( x{}{u} ,y{}{p} )


	Applying rule A(x{u}[.] y{p}[.]) -> A(x{p}[.] y{p}[.]) (File "sym3.ka", line 3, characters 0-44:):
		the precondition is satisfied

		rule A(x{u}[.] y{p}[.]) -> A(x{p}[.] y{p}[.]) (File "sym3.ka", line 3, characters 0-44:) is applied for the first time

		Updating the views for A(x{},y{})

INTENSIONAL DESCRIPTION:
Id=21
 Node(site_type:1<1)
  Id=0
   Leaf False 

  Id=20
   Node(site_type:1<2)
    Id=9
     Node(site_type:2<1)
      Id=0
       Leaf False 

      Id=8
       Node(site_type:2<2)
        Id=1
         Leaf True 

        Id=0
         Leaf False 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
		A( x{}{p} ,y{}{p} )


	Applying rule A(x{p}[.] y{u}[.]) -> A(x{p}[.] y{p}[.]) (File "sym3.ka", line 4, characters 0-44:):
		the precondition is satisfied

		rule A(x{p}[.] y{u}[.]) -> A(x{p}[.] y{p}[.]) (File "sym3.ka", line 4, characters 0-44:) is applied for the first time

		Updating the views for A(x{},y{})

	Applying rule A(w{u}[.] t{u}[.]) -> A(w{p}[.] t{u}[.]) (File "sym3.ka", line 5, characters 0-44:):
		the precondition is satisfied

		rule A(w{u}[.] t{u}[.]) -> A(w{p}[.] t{u}[.]) (File "sym3.ka", line 5, characters 0-44:) is applied for the first time

		Updating the views for A(w{},t{})

INTENSIONAL DESCRIPTION:
Id=15
 Node(site_type:1<1)
  Id=0
   Leaf False 

  Id=14
   Node(site_type:1<2)
    Id=5
     Node(site_type:2<0)
      Id=0
       Leaf False 

      Id=4
       Node(site_type:2<1)
        Id=1
         Leaf True 

        Id=0
         Leaf False 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
		A( w{}{p} ,t{}{u} )


	Applying rule A(w{u}[.] t{u}[.]) -> A(w{u}[.] t{p}[.]) (File "sym3.ka", line 6, characters 0-44:):
		the precondition is satisfied

		rule A(w{u}[.] t{u}[.]) -> A(w{u}[.] t{p}[.]) (File "sym3.ka", line 6, characters 0-44:) is applied for the first time

		Updating the views for A(w{},t{})

INTENSIONAL DESCRIPTION:
Id=11
 Node(site_type:1<0)
  Id=0
   Leaf False 

  Id=10
   Node(site_type:1<1)
    Id=9
     Node(site_type:2<1)
      Id=0
       Leaf False 

      Id=8
       Node(site_type:2<2)
        Id=1
         Leaf True 

        Id=0
         Leaf False 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
		A( w{}{u} ,t{}{p} )


	Applying rule A(w{u}[.] t{p}[.]) -> A(w{p}[.] t{p}[.]) (File "sym3.ka", line 7, characters 0-44:):
		the precondition is satisfied

		rule A(w{u}[.] t{p}[.]) -> A(w{p}[.] t{p}[.]) (File "sym3.ka", line 7, characters 0-44:) is applied for the first time

		Updating the views for A(w{},t{})

INTENSIONAL DESCRIPTION:
Id=21
 Node(site_type:1<1)
  Id=0
   Leaf False 

  Id=20
   Node(site_type:1<2)
    Id=9
     Node(site_type:2<1)
      Id=0
       Leaf False 

      Id=8
       Node(site_type:2<2)
        Id=1
         Leaf True 

        Id=0
         Leaf False 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
		A( w{}{p} ,t{}{p} )


	Applying rule A(w{p}[.] t{u}[.]) -> A(w{p}[.] t{p}[.]) (File "sym3.ka", line 8, characters 0-44:):
		the precondition is satisfied

		rule A(w{p}[.] t{u}[.]) -> A(w{p}[.] t{p}[.]) (File "sym3.ka", line 8, characters 0-44:) is applied for the first time

		Updating the views for A(w{},t{})

	Applying rule A(x{u}[.] y{u}[.]) -> A(x{p}[.] y{u}[.]) (File "sym3.ka", line 1, characters 0-44:):
		the precondition is satisfied

		Updating the views for A(x{},y{})

	Applying rule A(x{u}[.] y{u}[.]) -> A(x{u}[.] y{p}[.]) (File "sym3.ka", line 2, characters 0-44:):
		the precondition is satisfied

		Updating the views for A(x{},y{})

	Applying rule A(x{u}[.] y{p}[.]) -> A(x{p}[.] y{p}[.]) (File "sym3.ka", line 3, characters 0-44:):
		the precondition is satisfied

		Updating the views for A(x{},y{})

	Applying rule A(x{p}[.] y{u}[.]) -> A(x{p}[.] y{p}[.]) (File "sym3.ka", line 4, characters 0-44:):
		the precondition is satisfied

		Updating the views for A(x{},y{})

	Applying rule A(w{u}[.] t{u}[.]) -> A(w{p}[.] t{u}[.]) (File "sym3.ka", line 5, characters 0-44:):
		the precondition is satisfied

		Updating the views for A(w{},t{})

	Applying rule A(w{u}[.] t{u}[.]) -> A(w{u}[.] t{p}[.]) (File "sym3.ka", line 6, characters 0-44:):
		the precondition is satisfied

		Updating the views for A(w{},t{})

	Applying rule A(w{u}[.] t{p}[.]) -> A(w{p}[.] t{p}[.]) (File "sym3.ka", line 7, characters 0-44:):
		the precondition is satisfied

		Updating the views for A(w{},t{})
------------------------------------------------------------
every rule may be applied
------------------------------------------------------------
every agent may occur in the model

------------------------------------------------------------
* Fixpoint iteration :
------------------------------------------------------------
agent_type:0:A:cv_id:0
Id=23
 Node(site_type:1<0)
  Id=0
   Leaf False 

  Id=22
   Node(site_type:1<2)
    Id=17
     Node(site_type:2<0)
      Id=0
       Leaf False 

      Id=8
       Node(site_type:2<2)
        Id=1
         Leaf True 

        Id=0
         Leaf False 

    Id=0
     Leaf False 

agent_type:0:A:cv_id:1
Id=23
 Node(site_type:1<0)
  Id=0
   Leaf False 

  Id=22
   Node(site_type:1<2)
    Id=17
     Node(site_type:2<0)
      Id=0
       Leaf False 

      Id=8
       Node(site_type:2<2)
        Id=1
         Leaf True 

        Id=0
         Leaf False 

    Id=0
     Leaf False 


------------------------------------------------------------
* Non relational properties:
------------------------------------------------------------
INTENSIONAL DESCRIPTION:
Id=24
 Node(site_type:1<0)
  Id=0
   Leaf False 

  Id=12
   Node(site_type:1<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=17
 Node(site_type:2<0)
  Id=0
   Leaf False 

  Id=8
   Node(site_type:2<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=26
 Node(site_type:3<0)
  Id=0
   Leaf False 

  Id=25
   Node(site_type:3<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=28
 Node(site_type:0<0)
  Id=0
   Leaf False 

  Id=27
   Node(site_type:0<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
A() => [ A(y{u}[.]) v A(y{p}[.]) ]
A() => [ A(w{u}[.]) v A(w{p}[.]) ]
A() => [ A(t{u}[.]) v A(t{p}[.]) ]
A() => [ A(x{u}[.]) v A(x{p}[.]) ]

------------------------------------------------------------
* Relational properties:
------------------------------------------------------------
INTENSIONAL DESCRIPTION:
Id=24
 Node(site_type:1<0)
  Id=0
   Leaf False 

  Id=12
   Node(site_type:1<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=17
 Node(site_type:2<0)
  Id=0
   Leaf False 

  Id=8
   Node(site_type:2<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=26
 Node(site_type:3<0)
  Id=0
   Leaf False 

  Id=25
   Node(site_type:3<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=28
 Node(site_type:0<0)
  Id=0
   Leaf False 

  Id=27
   Node(site_type:0<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
------------------------------------------------------------
* Properties in connected agents
------------------------------------------------------------
------------------------------------------------------------
* Properties of pairs of bonds
------------------------------------------------------------
INTENSIONAL DESCRIPTION:
Id=24
 Node(site_type:1<0)
  Id=0
   Leaf False 

  Id=12
   Node(site_type:1<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=17
 Node(site_type:2<0)
  Id=0
   Leaf False 

  Id=8
   Node(site_type:2<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=26
 Node(site_type:3<0)
  Id=0
   Leaf False 

  Id=25
   Node(site_type:3<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=28
 Node(site_type:0<0)
  Id=0
   Leaf False 

  Id=27
   Node(site_type:0<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=24
 Node(site_type:1<0)
  Id=0
   Leaf False 

  Id=12
   Node(site_type:1<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=17
 Node(site_type:2<0)
  Id=0
   Leaf False 

  Id=8
   Node(site_type:2<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=26
 Node(site_type:3<0)
  Id=0
   Leaf False 

  Id=25
   Node(site_type:3<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
INTENSIONAL DESCRIPTION:
Id=28
 Node(site_type:0<0)
  Id=0
   Leaf False 

  Id=27
   Node(site_type:0<2)
    Id=1
     Leaf True 

    Id=0
     Leaf False 

EXTENSIONAL DESCRIPTION:
------------------------------------------------------------
* Export Views domain - non relational properties to JSon (internal constraints_list):
------------------------------------------------------------
A()=> [
		  A(x{u}[.])
		v A(x{p}[.])]
A()=> [
		  A(t{u}[.])
		v A(t{p}[.])]
A()=> [
		  A(w{u}[.])
		v A(w{p}[.])]
A()=> [
		  A(y{u}[.])
		v A(y{p}[.])]

------------------------------------------------------------
* Export Views domain - relational properties to JSon (internal constraints_list):
------------------------------------------------------------

------------------------------------------------------------
* Export Connected agents to JSon (internal constraints_list):
------------------------------------------------------------

------------------------------------------------------------
* Export Parallel bonds to JSon (internal constraints_list):
------------------------------------------------------------

Compute the contact map...
Translation from patten to raw_mixture
INPUT:
A(x{p} y{p} w{p} t{p})
OUTPUT:
A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{u}[.] y{u/p}[.]) @ 1
 rule:   A(x{u}[.] y{u/p}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{u/p}[.] y{p}[.]) @ 2
 rule:   A(x{u/p}[.] y{p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{u/p}[.]) @ 2
 rule:   A(x{p}[.] y{u/p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(w{u/p}[.] t{u}[.]) @ 1
 rule:   A(w{u}[.] t{u/p}[.]) @ 1
Existing rule
 rule:   A(w{u/p}[.] t{u}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(w{u}[.] t{u/p}[.]) @ 1
 rule:   A(w{u/p}[.] t{u}[.]) @ 1
Existing rule
 rule:   A(w{u}[.] t{u/p}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(w{u/p}[.] t{p}[.]) @ 2
 rule:   A(w{p}[.] t{u/p}[.]) @ 2
Existing rule
 rule:   A(w{u/p}[.] t{p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(w{p}[.] t{u/p}[.]) @ 2
 rule:   A(w{u/p}[.] t{p}[.]) @ 2
Existing rule
 rule:   A(w{p}[.] t{u/p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites t and x in agent of type  A
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
 rule:   A(x[.] y{u}[.] t{u/p}[#]) @ 1
Unknown rule
Check an orbit
Permutation of the sites t and y in agent of type  A
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
 rule:   A(x{u/p}[.] y[.] t{u}[#]) @ 1
Unknown rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
 rule:   A(x{u}[.] y{u/p}[.]) @ 1
Existing rule
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{u}[.] y{u/p}[.]) @ 1
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
Existing rule
 rule:   A(x{u}[.] y{u/p}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{u/p}[.] y{p}[.]) @ 2
 rule:   A(x{p}[.] y{u/p}[.]) @ 2
Existing rule
 rule:   A(x{u/p}[.] y{p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{u/p}[.]) @ 2
 rule:   A(x{u/p}[.] y{p}[.]) @ 2
Existing rule
 rule:   A(x{p}[.] y{u/p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(w{u/p}[.] t{u}[.]) @ 1
 rule:   A(w{u/p}[.] t{u}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(w{u}[.] t{u/p}[.]) @ 1
 rule:   A(w{u}[.] t{u/p}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(w{u/p}[.] t{p}[.]) @ 2
 rule:   A(w{u/p}[.] t{p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(w{p}[.] t{u/p}[.]) @ 2
 rule:   A(w{p}[.] t{u/p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{u}[.] y{u/p}[.]) @ 1
 rule:   A(x{u}[.] y{u/p}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{u/p}[.] y{p}[.]) @ 2
 rule:   A(x{u/p}[.] y{p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{u/p}[.]) @ 2
 rule:   A(x{p}[.] y{u/p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(w{u/p}[.] t{u}[.]) @ 1
 rule:   A(w{u}[.] t{u/p}[.]) @ 1
Existing rule
 rule:   A(w{u/p}[.] t{u}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(w{u}[.] t{u/p}[.]) @ 1
 rule:   A(w{u/p}[.] t{u}[.]) @ 1
Existing rule
 rule:   A(w{u}[.] t{u/p}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(w{u/p}[.] t{p}[.]) @ 2
 rule:   A(w{p}[.] t{u/p}[.]) @ 2
Existing rule
 rule:   A(w{u/p}[.] t{p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(w{p}[.] t{u/p}[.]) @ 2
 rule:   A(w{u/p}[.] t{p}[.]) @ 2
Existing rule
 rule:   A(w{p}[.] t{u/p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites t and x in agent of type  A
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
 rule:   A(y{u}[.] t{u/p}[.]) @ 1
Unknown rule
Check an orbit
Permutation of the sites t and y in agent of type  A
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
 rule:   A(x{u/p}[.] t{u}[.]) @ 1
Unknown rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
 rule:   A(x{u}[.] y{u/p}[.]) @ 1
Existing rule
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{u}[.] y{u/p}[.]) @ 1
 rule:   A(x{u/p}[.] y{u}[.]) @ 1
Existing rule
 rule:   A(x{u}[.] y{u/p}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{u/p}[.] y{p}[.]) @ 2
 rule:   A(x{p}[.] y{u/p}[.]) @ 2
Existing rule
 rule:   A(x{u/p}[.] y{p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{u/p}[.]) @ 2
 rule:   A(x{u/p}[.] y{p}[.]) @ 2
Existing rule
 rule:   A(x{p}[.] y{u/p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(w{u/p}[.] t{u}[.]) @ 1
 rule:   A(w{u/p}[.] t{u}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(w{u}[.] t{u/p}[.]) @ 1
 rule:   A(w{u}[.] t{u/p}[.]) @ 1
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(w{u/p}[.] t{p}[.]) @ 2
 rule:   A(w{u/p}[.] t{p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(w{p}[.] t{u/p}[.]) @ 2
 rule:   A(w{p}[.] t{u/p}[.]) @ 2
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites x and y in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Check an orbit
Permutation of the sites t and w in agent of type  A
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
 rule:   A(x{p}[.] y{p}[.] w{p}[.] t{p}[.])+ @ 0
Existing rule
Contact map
agent:A
  site:t
internal_states:p;u;
  site:w
internal_states:p;u;
  site:x
internal_states:p;u;
  site:y
internal_states:p;u;
Partitioned contact map
************
Agent: A
  -Equivalence classes of sites for internal states:
      {t,w,x,y}
  -Equivalence classes of sites (both):
      {t,w,x,y}
************
Partitioned contact map (LKAPPA)
************
Agent: A
  -Equivalence classes of sites for internal states:
      {t,w,x,y}
  -Equivalence classes of sites (both):
      {t,w,x,y}
************
With predicate (LKAPPA)
************
Agent: A
  -Equivalence classes of sites for internal states:
      {x,y}
      {t,w}
  -Equivalence classes of sites (both):
      {x,y}
      {t,w}
************
With predicate (LKAPPA) init
************
Agent: A
  -Equivalence classes of sites for internal states:
      {t,w}
      {x,y}
  -Equivalence classes of sites (both):
      {t,w}
      {x,y}
************
With predicate (LKAPPA) algebra expression
************
Agent: A
  -Equivalence classes of sites for internal states:
      {x,y}
      {t,w}
  -Equivalence classes of sites (both):
      {x,y}
      {t,w}
************
Symmetries:
In rules:
************
Agent: A
  -Equivalence classes of sites for internal states:
      {x,y}
      {t,w}
  -Equivalence classes of sites (both):
      {x,y}
      {t,w}
************
In rules and initial states:
************
Agent: A
  -Equivalence classes of sites for internal states:
      {t,w}
      {x,y}
  -Equivalence classes of sites (both):
      {t,w}
      {x,y}
************
In rules and algebraic expression:
************
Agent: A
  -Equivalence classes of sites for internal states:
      {x,y}
      {t,w}
  -Equivalence classes of sites (both):
      {x,y}
      {t,w}
************
execution finished without any exception
