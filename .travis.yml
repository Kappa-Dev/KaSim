language: OCaml

dist: trusty
sudo: required

env:
  global:
    secure: "XBCnCpNZ9WfkvDLkwMeW/D/TphPpqDJQdSsC9UOK9HFR3rgBmCof36DlirrZeefF6YKTr3Exkbl/7jDUK7hAGoa1c5NbXqYFp4ne3pSo77G3jHbC0zEP5k2F15NKSo8P9x0QsKzi7Mg1liratz7u65jRqURaZG4kFMw4f0NfVGU="

matrix:
  include:
  - env: CHECKED=webserver
    language: python
    python: 3.5
    addons:
      apt:
        sources:
          - avsm
        packages:
          - ocaml-nox
          - aspcud
          - opam
  - env: CHECKED=js
    addons:
      apt:
        sources:
          - avsm
        packages:
          - ocaml-nox
          - aspcud
          - opam
  - env: USE_TK=1
    addons:
      apt:
        sources:
          - avsm
        packages:
          - ocaml-nox
          - aspcud
          - opam
          - tk-dev
  - env: CHECKED=native
    addons:
      apt:
        sources:
          - avsm
        packages:
          - ocaml-nox
          - aspcud
          - opam
          - gnuplot-nox
          - graphviz
          - ghostscript
          - latex-xcolor
          - texlive-latex-recommended
          - texlive-fonts-recommended
          - texlive-pictures
          - tex4ht
  - os: osx
    env: CHECKED=MacOS
  - env: CHECKED=windows
    addons:
      apt:
        sources:
          - avsm
        packages:
          - aspcud
          - opam
          - gcc-mingw-w64-x86-64

before_install:
  - sh -c "if [ '$TRAVIS_OS_NAME' = osx ] ; then brew update ; brew install opam ; fi"

install:
  - sh -c "if [ '$TRAVIS_OS_NAME' = osx ] || [ '$CHECKED' = windows ] ; then opam init -a --compiler=4.04.0 ; else opam init -a git://github.com/ocaml/opam-repository ; fi"
  - sh -c "if [ '$CHECKED' = windows ] ; then opam remote add cross-windows git://github.com/whitequark/opam-cross-windows ; fi"
  - eval $(opam config env) && opam install -y conf-which base-bytes #Hack so that opam choose a version of cppo & yojson recent enough
  - opam install -y ocamlbuild yojson lwt
  - sh -c "if [ '$USE_TK' = 1 ] ; then opam install -y labltk ; fi"
  - sh -c "if [ '$TRAVIS_OS_NAME' = osx ] || [ '$CHECKED' = js ] || [ '$CHECKED' = windows ] ; then opam install -y lwt_react tyxml-ppx js_of_ocaml-lwt js_of_ocaml-tyxml atdgen ; fi"
  - sh -c "if [ '$CHECKED' = webserver ] ; then opam install -y atdgen cohttp ; fi"
  - sh -c "if [ '$CHECKED' = webserver ] ; then pip2 install --user . nose && pip install -v . nose ; fi"
  - sh -c "if [ '$CHECKED' = windows ] ; then opam install -y ocaml-windows64 atdgen-windows lwt-windows ; fi"

script:
  - make all
  - sh -c "if [ '$CHECKED' = native ] ; then make doc_html ; fi"
  - sh -c "if [ '$CHECKED' = native ] ; then make -j2 check ; fi"
  - sh -c "if [ '$CHECKED' = native ] ; then make META kappalib ; fi"
  - sh -c "if [ '$CHECKED' = webserver ] ; then make agents bin/WebSim && cd python && python3 tests/test_rest.py && python3 tests/test_std.py && python2 tests/test_rest.py && python2 tests/test_std.py; fi"
  - sh -c "if [ '$CHECKED' = js ] ; then make site/index.html ; fi"
  - sh -c "if [ '$TRAVIS_OS_NAME' = osx ] ; then make Kappapp.app ; fi"
  - sh -c "if [ '$CHECKED' = windows ] ; then make KappaBin.zip ; fi"

after_success:
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then ( umask 077 && openssl aes-256-cbc -K $encrypted_942f740de87b_key -iv $encrypted_942f740de87b_iv -in dev/travis-deploy.enc -out dev/travis-deploy -d ) ; fi'


deploy:
  provider: script
  script: dev/update-web.sh "$CHECKED"
  skip_cleanup: true
  on:
    branch: master
