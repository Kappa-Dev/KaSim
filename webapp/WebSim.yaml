openapi: 3.0.0
info:
  title: Kasim API
  description: Calls to a server running Kappa tools suite
  contact:
    email: admin@executableknowledge.org
  license:
    name: LGPL
    url: 'http://www.gnu.org/licenses/lgpl-3.0.en.html'
  version: 4.1.0
servers:
  - url: 'https://api.executableknowledge.org/kappa/v2'
    description: Example dev server
tags:
  - name: model
  - name: simulation
  - name: analyses
  - name: causality
  - name: ODE
paths:
  /projects:
    get:
      tags:
        - model
      summary: List of projets
      responses:
        '200':
          description: list of project id
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - default
    post:
      tags:
        - model
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project_id
              properties:
                project_id:
                  type: string
        required: true
      summary: Create project
      responses:
        '200':
          $ref: '#/components/responses/Unit'
        '500':
          description: Project already exists
          $ref: '#/components/responses/Default'
  '/projects/{project_id}':
    parameters:
      - $ref: '#/components/parameters/ProjectId'
    delete:
      tags:
        - model
      summary: Delete project
      responses:
        '200':
          $ref: '#/components/responses/Unit'
        '404':
          description: Project does not exist
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/parse':
    parameters:
      - $ref: '#/components/parameters/ProjectId'
    post:
      tags:
        - model
      requestBody:
        description: Overwrittten variables
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  var:
                    type: string
                  val:
                    type: number
        required: true
      summary: Compile the model
      responses:
        '200':
          description: The AST of the model
          content:
            application/json:
              schema:
                type: object
                properties:
                  project_version:
                    type: string
                  boxed_ast:
                    description: data
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/files':
    parameters:
      - $ref: '#/components/parameters/ProjectId'
    post:
      tags:
        - model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
        required: true
      summary: Add a file to the project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File_metadata'
        default:
          $ref: '#/components/responses/Default'
    get:
      tags:
        - model
      summary: Get file catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File_metadata'
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/files/{file_id}':
    parameters:
      - $ref: '#/components/parameters/ProjectId'
      - in: path
        name: file_id
        schema:
          type: string
        required: true
    put:
      tags:
        - model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File_modification'
        required: true
      summary: Modify a file
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File_metadata'
        default:
          $ref: '#/components/responses/Default'
    get:
      tags:
        - model
      summary: Get a file
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        default:
          $ref: '#/components/responses/Default'
    delete:
      tags:
        - model
      summary: Remove a file from the project
      responses:
        '200':
          $ref: '#/components/responses/Unit'
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation':
    parameters:
      - $ref: '#/components/parameters/ProjectId'
    post:
      tags:
        - simulation
      summary: Launch a simulation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Simulation_parameter'
        required: true
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
    get:
      tags:
        - simulation
      summary: Get simulation status
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
    delete:
      tags:
        - simulation
      summary: Delete the current simulation
      description: All outputs are lost
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/pause':
    put:
      tags:
        - simulation
      summary: Pause the simulation
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/continue':
    put:
      tags:
        - simulation
      summary: Restart the simulation
      description: with new parameters
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/intervention':
    put:
      tags:
        - simulation
      summary: Execute a intervention
      description: the simulation must be paused
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - intervention_code
              properties:
                intervention_code:
                  type: string
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/parameter':
    get:
      tags:
        - simulation
      summary: Parameters used to launch the simulation
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/logmessages':
    get:
      tags:
        - simulation
      summary: Get simulation log
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/efficiency':
    get:
      tags:
        - simulation
      summary: Get simulation efficiency
      description: Number of null events and their reason
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/plot':
    get:
      tags:
        - simulation
      summary: Get observable values
      parameters:
        - $ref: '#/components/parameters/ProjectId'
        - in: query
          name: plot_limit_points
          description: maximal number of lines returned
          schema:
            type: integer
        - in: query
          name: plot_limit_offset
          description: >-
            number of lines to skip at the beginning Returns the last lines if
            not set.
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '404':
          description: project not found
          $ref: '#/components/responses/Default'
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/trace':
    get:
      tags:
        - simulation
      summary: Get the trace of the simulation
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/filelines':
    get:
      tags:
        - simulation
      summary: List files generated by $PRINT
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/filelines/{fileline_id}':
    get:
      tags:
        - simulation
      summary: Get a file generated by $PRINT
      parameters:
        - $ref: '#/components/parameters/ProjectId'
        - in: path
          name: fileline_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/DIN':
    get:
      tags:
        - simulation
      summary: List the dynamic influence network
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/DIN/{DIN_id}':
    get:
      tags:
        - simulation
      summary: Get a DIN
      parameters:
        - $ref: '#/components/parameters/ProjectId'
        - in: path
          name: DIN_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/snapshots':
    get:
      tags:
        - simulation
      summary: List snapshots
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/simulation/snapshots/{snap_id}':
    get:
      tags:
        - simulation
      summary: Get a snapshot
      description: >-
        This does not fire the computation of a snapshot. It sends an already
        available one.
      parameters:
        - $ref: '#/components/parameters/ProjectId'
        - in: path
          name: snap_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/analyses':
    put:
      tags:
        - analyses
      summary: Initialize the static analyser
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: JSON of the model AST
        required: true
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/analyses/contact_map':
    get:
      tags:
        - analyses
      summary: Get contact map JSON
      parameters:
        - $ref: '#/components/parameters/ProjectId'
        - $ref: '#/components/parameters/Accuracy'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/analyses/influence_map':
    get:
      tags:
        - analyses
      summary: Get influence map
      description: only the neighbours of a node when origin is given
      parameters:
        - $ref: '#/components/parameters/ProjectId'
        - $ref: '#/components/parameters/Accuracy'
        - in: query
          name: fwd
          schema:
            type: integer
        - in: query
          name: bwd
          schema:
            type: integer
        - in: query
          name: total
          schema:
            type: integer
        - in: query
          name: origin
          schema:
            type: string
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/analyses/dead_rules':
    get:
      tags:
        - analyses
      summary: Return dead rules
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
  '/projects/{project_id}/analyses/dead_agents':
            get:
              tags:
                - analyses
              summary: Return dead agents
              parameters:
                - $ref: '#/components/parameters/ProjectId'
              responses:
                '200':
                  description: OK
                default:
                  $ref: '#/components/responses/Default'
  '/projects/{project_id}/analyses/constraints':
    get:
      tags:
        - analyses
      summary: Get model invariants
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/Default'
components:
  schemas:
    File_version:
      type: object
      properties:
        client_id:
          type: string
        local_version_file_version:
          type: integer
    File_metadata:
      type: object
      required:
        - compile
        - id
        - position
      properties:
        compile:
          type: boolean
        id:
          type: string
        position:
          type: integer
        version:
          type: array
          items:
            $ref: '#/components/schemas/File_version'
    File:
      type: object
      required:
        - metadata
        - content
      properties:
        metadata:
          $ref: '#/components/schemas/File_metadata'
        content:
          type: string
    File_patch:
      type: object
      required:
        - file_patch_content
      properties:
        file_patch_start:
          type: integer
        file_patch_end:
          type: integer
        file_patch_content:
          type: string
    File_modification:
      type: object
      required:
        - file_modification_version
      properties:
        file_modification_version:
          type: array
          items:
            $ref: '#/components/schemas/File_version'
        compile:
          type: boolean
        id:
          type: string
        position:
          type: integer
        content:
          $ref: '#/components/schemas/File_patch'
    Simulation_parameter:
      type: object
      required:
        - plot_period
        - pause_condition
        - store_trace
      properties:
        plot_period:
          type: number
        pause_condition:
          type: string
        seed:
          type: integer
        store_trace:
          type: boolean
  responses:
    Unit:
      description: Done
      content:
        application/json:
          schema:
            nullable: true
            example: null
    Default:
      description: Something went wrong
      content:
        application/json:
          schema:
            type: object
            properties:
              severity:
                type: string
              text:
                type: string
              range:
                type: object
  parameters:
    ProjectId:
      in: path
      name: project_id
      schema:
        type: string
      required: true
    Accuracy:
      in: query
      name: accuracy
      schema:
        type: string
        enum:
          - Low
          - High
