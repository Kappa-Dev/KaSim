{!indexlist}

The main entry point of KaSim executable is main/KaSim.ml but let's
describe the API bottom-up.

The folder dataStructures/ has a transparent name. You can find there:
{!modules: DynamicArray SetMap IntCollection ValMap Operator Nbr Fractions NamedDecls Locality}
{!modules: List_util Option_util Tools}
Some pretty printing utilities are here too:
{!modules: Pp Pp_svg Pp_html Progress_report}
Including the KaSa machinery:
{!modules: Loggers Graph_loggers Ode_loggers}


In term/ directory stands all definitions the simulator works on.
{!modules: Agent Signature Contact_map Pattern
Instantiation Alg_expr Alg_expr_extra Affine_combinations Raw_mixture Patterns_extra Primitives Model Kappa_printer }

In grammar/ are the parser and the compilers
{!modules:Configuration Ast LKappa Snip Eval}

The module to store and manipulate the state of the simulation are in
siteGraph/
{!modules: Edges Navigation Replay}

The simulation engine is in simulation/
The core of the interpreter
{!modules: Expr_interpreter Rule_interpreter State_interpreter}
and some storage
{!modules: Counter Data Trace}

The machinary to cook stories from an execution trace is in cflow/
{!modules: Compression_main Utilities Priority}

The code specific to the command line backend is in main/. It consists in file handler and renderers
{!modules: Outputs Kappa_files}

Some APIs for KaSa can be found in KaSa_rep/export/
{!modules: Export_to_KaDE Export_to_KaSa Export_to_KaSim}

Tables of symbol for KaSa/KaDE backend can be found in KaSa_rep/config/
{!modules: Symbol_table}

Some data_structures used in KaSa.
This library that proposes different implementations for arrays can be found in KaSa_rep/data_structures/
{!modules: Int_storage}
The library to deal with multi-valued decision diagrams is in KaSa_rep/data_structures/mvbdu/
{!modules: Mvbdu_wrapper}
The library that deals with affine relationships (taken from Pi-S.A.) is in KaSa_rep/data_structures/affine_arithemtics
{!modules: tools_aff header config_aff working_list_imperative fractions intervalles intertab matrices mat_intes occur1 }

The code of the static analyser is in KaSa_rep/reachability_analysis/
{!modules: Analyzer Analyzer_headers Composite_domain Communication Analyzer_domain_sig Product Usual_domains}
Several abstract domains are available:
{!modules: Rules_domain Agents_domain Views_domain Parallel_bonds Site_across_bonds_domain}

Primivites to deal with symmetries in rules and species
{!modules: LKappa_group_action Pattern_group_action Symmetries_sig Symmetries}
